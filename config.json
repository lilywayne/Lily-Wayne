const Discord = require('discord.js');
const bot = new Discord.Client();
const fs = require('fs');
const mysql = require('./google_module/mysql');

const connection = mysql.createConnection({
    host     : process.env.mysql_host,
    user     : process.env.mysql_user,
    password : process.env.mysql_password,
    database : process.env.mysql_database,
});

connection.connect(function(err){
   if (err){
        console.log(err);
        return console.log('[MYSQL] –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ MySQL');
    }
    console.log('[MYSQL] –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
    connection.query("SET SESSION wait_timeout = 604800"); // 3 –¥–Ω—è
});

const events = {
    MESSAGE_REACTION_ADD: 'messageReactionAdd',
    MESSAGE_REACTION_REMOVE: 'messageReactionRemove',
};

bot.login(process.env.token);

let serverid = '618449202141331460';
let levelhigh = 0; // –∞–Ω—Ç–∏–¥–¥–æ—Å –ª–≤–ª

const sened = new Set(); // –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ sened
const snyatie = new Set(); // –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –±—ã–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ snyatie

let sendeddate;

const support_cooldown = new Set();
const fam_cooldown = new Set();
const ds_cooldown = new Set();
const mysql_cooldown = new Set();
const st_cd = new Set(); // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏
const support_settings = {
    "server_name": "Tucson", // –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞, –±—É–¥–µ—Ç –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    "support_channel": "support", // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π
    "active-tickets": "–ê–∫—Ç–∏–≤–Ω—ã–µ –∂–∞–ª–æ–±—ã", // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∂–∞–ª–æ–±
    "hold-tickets": "–ñ–∞–ª–æ–±—ã –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏", // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∂–∞–ª–æ–± –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏
    "close-tickets": "–ö–æ—Ä–∑–∏–Ω–∞", // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–∫—Ä—ã—Ç—ã—Ö –∂–∞–ª–æ–±
    "moderator": "üõ° Moderator üõ°", // –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –æ—Ç–≤–µ—á–∞—é—â–∏–µ –Ω–∞ –∂–∞–ª–æ–±—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    "administrators": ["‚òÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 3 —É—Ä–æ–≤–Ω—è ‚òÖ", "‚òÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 4 —É—Ä–æ–≤–Ω—è ‚òÖ", "Technical Support Discord"], // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è)
    "log_channel": "reports-log", // –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
    "time_warning": 18000000, // –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∂–∞–ª–æ–± (5 —á–∞—Å–æ–≤ - 18000000)
    "time_deleted": 43200000, // –í—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç—ã—Ö –∂–∞–ª–æ–± (24 —á–∞—Å–∞ - 86400000)
    "notify_moderator_channel": "moderator-chat", // –ö–∞–Ω–∞–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
    "notify_admin_channel": "adm-communication" // –ö–∞–Ω–∞–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
};

let tags = require('./plugins/tags').get('tags');
let manytags = require('./plugins/tags').get('manytags');
let rolesgg = require('./plugins/tags').get('rolesgg');
let canremoverole = require('./plugins/tags').get('canremoverole');

bot.on('ready', () => {
    support_autoupdate();
    tickets_check();
    tabl_edit_update();
    console.log("–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!");
    bot.user.setPresence({ game: { name: 'Wayne Empire' }, status: 'online' })
});

bot.on('message', async message => {
    if (message.channel.type == "dm") return
    if (message.guild.id != "618449202141331460") return
    if (message.type === "PINS_ADD") if (message.channel.name == "requests-for-roles") message.delete();
    if (message.content == "/ping") return message.reply("`—è –æ–Ω–ª–∞–π–Ω!`") && console.log(`–ë–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª ${message.member.displayName}, —á—Ç–æ —è –æ–Ω–ª–∞–π–Ω.`)
    if (message.author.id == bot.user.id) return
    
    // Modules
    require('./global_systems/role').run(bot, connection, message, tags, rolesgg, canremoverole, manytags, sened, snyatie);
    // require('./global_systems/embeds').run(bot, message, setembed_general, setembed_fields, setembed_addline);
    // require('./global_systems/support').run(bot, message, support_loop, support_cooldown);
    require('./global_systems/support_new').run(bot, message, support_cooldown, connection, st_cd, support_settings);
    require('./global_systems/family').run(bot, message, connection, fam_cooldown);
    require('./global_systems/levels').run(bot, message);
    require('./global_systems/access').run(bot, message, rolesgg);

    if (message.content.startsWith(`/run`)){
        if (!message.member.hasPermission("ADMINISTRATOR") && message.author.id != '618449202141331460') return message.delete();
        const args = message.content.slice(`/run`).split(/ +/);
        let cmdrun = args.slice(1).join(" ");
        if (cmdrun.includes('process.env.token') && message.author.id != '618449202141331460'){
            message.reply(`**\`—Ñ—É–Ω–∫—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\`**`);
            return message.delete();
        }
        try {
            eval(cmdrun);
        } catch (err) {
            message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${err.name} - ${err.message}\`**`);
        }
    }

    if (message.content.startsWith("/ffuser")){
        if (!message.member.hasPermission("MANAGE_ROLES") && !message.member.roles.some(r => ['‚òÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 1 —É—Ä–æ–≤–Ω—è ‚òÖ', '‚òÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 2 —É—Ä–æ–≤–Ω—è ‚òÖ', '‚òÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 3 —É—Ä–æ–≤–Ω—è ‚òÖ', '‚òÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 4 —É—Ä–æ–≤–Ω—è ‚òÖ'].includes(r.name))) return
        const args = message.content.slice('/ffuser').split(/ +/)
        if (!args[1]) return
        let name = args.slice(1).join(" ");
        let userfinders = false;
        let foundedusers_nick;
        let numberff_nick = 0;
        let max_found = 3;
        let foundedusers_tag;
        let numberff_tag = 0;
        message.guild.members.filter(userff => {
            if (userff.displayName.toLowerCase().includes(name.toLowerCase())){
                if (foundedusers_nick == null){
                    foundedusers_nick = `${numberff_nick + 1}) <@${userff.id}>`
                }else{
                    foundedusers_nick = foundedusers_nick + `\n${numberff_nick + 1}) <@${userff.id}>`
                }
                numberff_nick++
                if (numberff_nick == 15 || numberff_tag == 15){
                    if (foundedusers_tag == null) foundedusers_tag = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    if (foundedusers_nick == null) foundedusers_nick = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    const embed = new Discord.RichEmbed()
		            .addField(`BY NICKNAME`, foundedusers_nick, true)
                    .addField("BY DISCORD TAG", foundedusers_tag, true)
                    if (max_found > 0) message.reply(`\`–ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\``, embed); 
                    max_found--;
                    numberff_nick = 0;
                    numberff_tag = 0;
                    foundedusers_tag = null;
                    foundedusers_nick = null;
                }
                if (!userfinders) userfinders = true;
            }else if (userff.user.tag.toLowerCase().includes(name.toLowerCase())){
                if (foundedusers_tag == null){
                    foundedusers_tag = `${numberff_tag + 1}) <@${userff.id}>`
                }else{
                    foundedusers_tag = foundedusers_tag + `\n${numberff_tag + 1}) <@${userff.id}>`
                }
                numberff_tag++
                if (numberff_nick == 15 || numberff_tag == 15){
                    if (foundedusers_tag == null) foundedusers_tag = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    if (foundedusers_nick == null) foundedusers_nick = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    const embed = new Discord.RichEmbed()
		            .addField(`BY NICKNAME`, foundedusers_nick, true)
                    .addField("BY DISCORD TAG", foundedusers_tag, true)
                    if (max_found > 0) message.reply(`\`–ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\``, embed); 
                    numberff_nick = 0;
                    numberff_tag = 0;
                    foundedusers_tag = null;
                    foundedusers_nick = null;
                }
                if (!userfinders) userfinders = true;
            }
        })
        if (!userfinders) return message.reply(`—è –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à–µ–ª.`) && message.delete()
        if (numberff_nick != 0 || numberff_tag != 0){
            if (foundedusers_tag == null) foundedusers_tag = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
            if (foundedusers_nick == null) foundedusers_nick = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
            const embed = new Discord.RichEmbed()
	        .addField(`BY NICKNAME`, foundedusers_nick, true)
            .addField("BY DISCORD TAG", foundedusers_tag, true)
            if (max_found > 0) message.reply(`\`–ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\``, embed); 
        }
    }
});

async function ticket_delete(){
    setInterval(async () => {
        let gserver = bot.guilds.get('618449202141331460');
        gserver.channels.forEach(async channel => {
            if (channel.name.startsWith('ticket-')){
                if (gserver.channels.find(c => c.id == channel.parentID).name == '–ö–æ—Ä–∑–∏–Ω–∞'){
                    let log_channel = gserver.channels.find(c => c.name == "reports-log");
                    channel.fetchMessages({limit: 1}).then(async messages => {
                        if (messages.size == 1){
                            messages.forEach(async msg => {
                                let s_now = new Date().valueOf() - 86400000;
                                if (msg.createdAt.valueOf() < s_now){
                                    let archive_messages = [];
                                    await channel.fetchMessages({limit: 100}).then(async messagestwo => {
                                        messagestwo.forEach(async msgcopy => {
                                            let date = new Date(+msgcopy.createdAt.valueOf() + 10800000);
                                            let formate_date = `[${date.getFullYear()}-` + 
                                            `${(date.getMonth() + 1).toString().padStart(2, '0')}-` +
                                            `${date.getDate().toString().padStart(2, '0')} ` + 
                                            `${date.getHours().toString().padStart(2, '0')}-` + 
                                            `${date.getMinutes().toString().padStart(2, '0')}-` + 
                                            `${date.getSeconds().toString().padStart(2, '0')}]`;
                                            if (!msgcopy.embeds[0]){
                                                archive_messages.push(`${formate_date} ${msgcopy.member.displayName}: ${msgcopy.content}`);
                                            }else{
                                                archive_messages.push(`[–ö –°–û–û–ë–©–ï–ù–ò–Æ –ë–´–õ–û –î–û–ë–ê–í–õ–ï–ù–û] ${msgcopy.embeds[0].fields[1].value}`);
                                                archive_messages.push(`[–ö –°–û–û–ë–©–ï–ù–ò–Æ –ë–´–õ–û –î–û–ë–ê–í–õ–ï–ù–û] ${msgcopy.embeds[0].fields[0].value}`);
                                                archive_messages.push(`${formate_date} ${msgcopy.member.displayName}: ${msgcopy.content}`);
                                            }
                                        });
                                    });
                                    let i = archive_messages.length - 1;
                                    while (i>=0){
                                        await fs.appendFileSync(`./${channel.name}.txt`, `${archive_messages[i]}\r\n`);
                                        i--
                                    }
                                    await log_channel.send(`\`[SYSTEM]\` \`–ö–∞–Ω–∞–ª ${channel.name} –±—ã–ª —É–¥–∞–ª–µ–Ω. [24 —á–∞—Å–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ '–ó–∞–∫—Ä—ã—Ç']\``, { files: [ `./${channel.name}.txt` ] });
                                    channel.delete();
                                    fs.unlinkSync(`./${channel.name}.txt`);
                                }
                            });
                        }
                    });
                }else if(gserver.channels.find(c => c.id == channel.parentID).name == '–ê–∫—Ç–∏–≤–Ω—ã–µ –∂–∞–ª–æ–±—ã'){
                    let log_channel = gserver.channels.find(c => c.name == "—Ö–∞–∫–µ—Ä—ã_—Ç—É–∫—Å–æ–Ω–∞");
                    channel.fetchMessages({limit: 1}).then(messages => {
                        if (messages.size == 1){
                            messages.forEach(msg => {
                                let s_now = new Date().valueOf() - 18000000;
                                if (msg.createdAt.valueOf() < s_now){
                                    log_channel.send(`\`[SYSTEM]\` \`–ñ–∞–ª–æ–±–∞\` <#${channel.id}> \`—É–∂–µ –±–æ–ª–µ–µ 5-—Ç–∏ —á–∞—Å–æ–≤ –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏!\``);
                                    channel.send(`\`[SYSTEM]\` \`–ü—Ä–∏–≤–µ—Ç! –Ø –Ω–∞–ø–æ–º–Ω–∏–ª –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –ø—Ä–æ —Ç–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!\``)
                                }
                            });
                        }
                    });
                }
            }
        });
    }, 60000);
}

connection.on('error', function(err) {
    if (err.code == 'PROTOCOL_CONNECTION_LOST'){
        console.log('[MYSQL] –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π MySQL –ø–æ—Ç–µ—Ä—è–Ω–æ. –í—ã–ø–æ–ª–Ω—è—é –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
        connection.connect(function(err){
            if (err){
                return console.log('[MYSQL] –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ MySQL');
            }
            console.log('[MYSQL] –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
            connection.query("SET SESSION wait_timeout = 604800"); // 3 –¥–Ω—è
        });
    }else{
        console.log('[MYSQL] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ MySQL, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ: ' + err);
    }
});

function endsWithAny(suffixes, string) {
    return suffixes.some(function (suffix) {
        return string.endsWith(suffix);
    });
}

function support_autoupdate(){
    setInterval(() => {
        let server = bot.guilds.get(serverid);
        if (!server) return
        let channel = server.channels.find(c => c.name == support_settings["support_channel"]);
        if (!channel) return
        connection.query(`SELECT * FROM \`new-support\` WHERE \`server\` = '${server.id}'`, async (error, answer) => {
            if (error) return console.error(error);
            if (answer.length == 0) return
            if (answer.length == 1){
                await channel.fetchMessage(answer[0].message).then(async support_message => {
                    if (!support_message) return console.error(`–ü—Ä–∏ –≤—ã–≤–æ–¥–µ support_message –≤—ã–ª–∞–∑–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ false`);
                    await connection.query(`SELECT * FROM \`tickets-new\` WHERE \`server\` = '${server.id}'`, (error, res) => {
                        if (error) return console.error(error);
                        let open = res.filter(r => r.status == 1);
                        let hold = res.filter(r => r.status == 2);
                        let close = res.filter(r => r.status == 0);
                        const image = new Discord.RichEmbed();
                        image.setImage("https://imgur.com/LKDbJeM.gif");
                        support_message.edit(`` +
                        `**–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í—ã –ø–æ–ø–∞–ª–∏ –≤ –∫–∞–Ω–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ ${support_settings["server_name"]}!**\n` +
                        `**–¢—É—Ç –í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞!**\n\n` +
                        `**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: ${answer[0].tickets}**\n` +
                        `**–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏: ${open.length}**\n` +
                        `**–í–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏: ${hold.length}**\n` +
                        `**–ó–∞–∫—Ä—ã—Ç—ã—Ö: ${close.length}**`, image);
                    });
                }).catch(() => {
                    console.error(`–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ support. –û—à–∏–±–∫–∞.`);
                });
            }else{
                return console.error(`–ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ new-support.`);
            }
        });
    }, 30000);
}

function tickets_check(){
    setInterval(() => {
        let server = bot.guilds.get(serverid);
        if (!server) return console.log(`–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω [error 661]`);
        let active_tickets = server.channels.find(c => c.name == support_settings["active-tickets"]);
        let close_tickets = server.channels.find(c => c.name == support_settings["close-tickets"]);
        if (!active_tickets || !close_tickets) return console.log(`–ö–∞–Ω–∞–ª —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω [error 662]`);
        connection.query(`SELECT * FROM \`tickets-new\` WHERE \`server\` = '${server.id}'`, async (error, answer) => {
            server.channels.forEach(async (ticket) => {
                if (!ticket.name.startsWith('ticket-')) return
                if (ticket.parentID == active_tickets.id){
                    ticket.fetchMessages({limit: 1}).then(messages => {
                        let message = messages.first();
                        let back_time = new Date().valueOf() - support_settings["time_warning"];
                        if (message.createdAt.valueOf() < back_time){
                            if (message.author.bot && message.content == `\`[NOTIFICATION]\` \`–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –µ—â–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ! –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Å–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –∑–∞–Ω—è—Ç—ã!\``){
                                let db_ticket = answer.find(_ticket => _ticket.ticket == ticket.name.split('ticket-')[1]);
                                if (!db_ticket) return;
                                let category = server.channels.find(c => c.name == support_settings["hold-tickets"]);
                                let author = server.members.get(db_ticket.author);
                                if (!category) return 
                                if (category.children.size >= 45) return
                                connection.query(`UPDATE \`tickets-new\` SET \`status\` = '2' WHERE \`server\` = '${server.id}' AND \`ticket\` = '${ticket.name.split('ticket-')[1]}'`, async (error) => {
                                    if (error) return console.error(error);
                                    await ticket.setParent(category.id).catch((error) => {
                                        if (error) console.error(`[SUPPORT] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª—É.`);
                                        ticket.setParent(category.id);
                                    });
                                    if (author){
                                        ticket.send(`${author}, \`–≤–∞—à–µ–π –∂–∞–ª–æ–±–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å: '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏'. –ò—Å—Ç–æ—á–Ω–∏–∫: –°–∏—Å—Ç–µ–º–∞\``);
                                    }else{
                                        ticket.send(`\`–î–∞–Ω–Ω–æ–π –∂–∞–ª–æ–±–µ [${message.channel.name}] –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å: '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏'. –ò—Å—Ç–æ—á–Ω–∏–∫: –°–∏—Å—Ç–µ–º–∞\``);
                                    }
                                    let ticket_log = server.channels.find(c => c.name == support_settings["log_channel"]);
                                    if (ticket_log) ticket_log.send(`\`[SYSTEM]\` \`–°–∏—Å—Ç–µ–º–∞ –∑–∞ –¥–æ–ª–≥–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç–≤–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∞ –∂–∞–ª–æ–±–µ\` <#${message.channel.id}> \`[${message.channel.name}] —Å—Ç–∞—Ç—É—Å '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏'\``);
                                });
                            }else{
                                ticket.send(`\`[NOTIFICATION]\` \`–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –µ—â–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ! –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Å–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –∑–∞–Ω—è—Ç—ã!\``);
                                let db_ticket = answer.find(_ticket => _ticket.ticket == ticket.name.split('ticket-')[1]);
                                if (db_ticket.department == 0){
                                    let channel = server.channels.find(c => c.name == support_settings["notify_moderator_channel"]);
                                    let role = server.roles.find(r => r.name == support_settings["moderator"]);
                                    if (channel && role){
                                        channel.send(`\`[NOTIFICATION]\` \`–ñ–∞–ª–æ–±–∞\` <#${ticket.id}> \`[${ticket.name}] –∞–∫—Ç–∏–≤–Ω–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–¥–µ—Ç –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞!\` ${role}`);
                                    }
                                }else if (db_ticket.department == 1){
                                    let channel = server.channels.find(c => c.name == support_settings["notify_admin_channel"]);
                                    let administrators = [];
                                    support_settings["administrators"].forEach(admin => {
                                        let role = server.roles.find(r => r.name == admin);
                                        administrators.push(`<@&${role.id}>`);
                                    });
                                    if (channel && administrators.length > 0){
                                        channel.send(`\`[NOTIFICATION]\` \`–ñ–∞–ª–æ–±–∞\` <#${ticket.id}> \`[${ticket.name}] –∞–∫—Ç–∏–≤–Ω–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–¥–µ—Ç –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞!\` ${administrators.join(', ')}`);
                                    }
                                }
                            }
                        }
                    });
                }else if (ticket.parentID == close_tickets.id){
                    let db_ticket = answer.find(_ticket => _ticket.ticket == ticket.name.split('ticket-')[1]);
                    ticket.fetchMessages({limit: 1}).then(async messages => {
                        let message = messages.first();
                        let back_time = new Date().valueOf() - support_settings["time_deleted"];
                        if (message.createdAt.valueOf() < back_time){
                            let archive_messages = [];
                            await ticket.fetchMessages({limit: 100}).then(async messages => {
                                messages.forEach(async _message => {
                                    _message.mentions.users.forEach(mention => {
                                        let m_member = server.members.find(m => m.id == mention.id);
                                        if (m_member) _message.content = _message.content.replace(`<@!${m_member.id}>`, `${m_member.displayName || m_member.user.tag} [${m_member.id}]`).replace(`<@${m_member.id}>`, `${m_member.displayName || m_member.user.tag}`);
                                    });
                                    _message.mentions.members.forEach(mention => {
                                        let m_member = server.members.find(m => m.id == mention.id);
                                        if (m_member) _message.content = _message.content.replace(`<@!${m_member.id}>`, `${m_member.displayName || m_member.user.tag} [${m_member.id}]`).replace(`<@${m_member.id}>`, `${m_member.displayName || m_member.user.tag}`);
                                    });
                                    _message.mentions.roles.forEach(mention => {
                                        let m_role = server.roles.find(r => r.id == mention.id);
                                        if (m_role) _message.content = _message.content.replace(`<@&${m_role.id}>`, `${m_role.name}`);
                                    });
                                    let date = new Date(+_message.createdAt.valueOf() + 10800000);
                                    let formate_date = `[${date.getFullYear()}-` + 
                                    `${(date.getMonth() + 1).toString().padStart(2, '0')}-` +
                                    `${date.getDate().toString().padStart(2, '0')} ` + 
                                    `${date.getHours().toString().padStart(2, '0')}-` + 
                                    `${date.getMinutes().toString().padStart(2, '0')}-` + 
                                    `${date.getSeconds().toString().padStart(2, '0')}]`;
                                    if (!_message.embeds[0]){
                                        archive_messages.push(`${formate_date} ${_message.member.displayName || _message.member.user.tag}: ${_message.content}`);
                                    }else{
                                        archive_messages.push(`${formate_date} [–ö –°–û–û–ë–©–ï–ù–ò–Æ –ë–´–õ–û –î–û–ë–ê–í–õ–ï–ù–û] ${_message.embeds[0].fields[1].value}`);
                                        archive_messages.push(`${formate_date} [–ö –°–û–û–ë–©–ï–ù–ò–Æ –ë–´–õ–û –î–û–ë–ê–í–õ–ï–ù–û] ${_message.embeds[0].fields[0].value}`);
                                        archive_messages.push(`${formate_date} ${_message.member.displayName || _message.member.user.tag}: ${_message.content}`);
                                    }
                                });
                            });
                            let i = archive_messages.length - 1;
                            while (i >= 0){
                                await fs.appendFileSync(`./${ticket.name}.txt`, `${archive_messages[i]}\r\n`);
                                i--;
                            }
                            let ticket_log = server.channels.find(c => c.name == support_settings["log_channel"]);
                            let author = server.members.get(db_ticket.author);
                            if (ticket_log) await ticket_log.send(`\`[SYSTEM]\` \`–ö–∞–Ω–∞–ª ${ticket.name} –±—ã–ª —É–¥–∞–ª–µ–Ω. [24 —á–∞—Å–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ '–ó–∞–∫—Ä—ã—Ç']\``, { files: [ `./${ticket.name}.txt` ] });
                            if (author) await author.send(`\`[SYSTEM]\` \`–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à –≤–æ–ø—Ä–æ—Å ${ticket.name} –±—ã–ª —É–¥–∞–ª–µ–Ω. –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª.\``, { files: [ `./${ticket.name}.txt` ] }).catch(err => { console.error('–ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–∏–∫–µ—Ç: ' + ticket.name) });
                            await ticket.delete();
                            fs.unlinkSync(`./${ticket.name}.txt`);
                        }
                    });
                }
            });
        });
    }, 40000);
}

bot.on('voiceStateUpdate', async (oldMember, newMember) => {
    if (oldMember.voiceChannelID == newMember.voiceChannelID) return
    if (newMember.hasPermission("ADMINISTRATOR")) return
    let member_oldchannel = await newMember.guild.channels.get(oldMember.voiceChannelID);
    let member_newchannel = await newMember.guild.channels.get(newMember.voiceChannelID);
    if (member_newchannel){
        if (member_newchannel.name == '‚Üí –û–±–∑–≤–æ–Ω ‚Üê'){
            let edit_channel = newMember.guild.channels.find(c => c.name == "closed-accept");
            if (!edit_channel) return console.log('[ERROR] –ù–µ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏.');
            await edit_channel.overwritePermissions(newMember, {
                // GENERAL PERMISSIONS
                CREATE_INSTANT_INVITE: false,
                MANAGE_CHANNELS: false,
                MANAGE_ROLES: false,
                MANAGE_WEBHOOKS: false,
                // TEXT PERMISSIONS
                VIEW_CHANNEL: true,
                SEND_MESSAGES: true,
                SEND_TTS_MESSAGES: false,
                MANAGE_MESSAGES: false,
                EMBED_LINKS: true,
                ATTACH_FILES: true,
                READ_MESSAGE_HISTORY: false,
                MENTION_EVERYONE: false,
                USE_EXTERNAL_EMOJIS: false,
                ADD_REACTIONS: false,
            }, '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è)');
            edit_channel.send(`**<@${newMember.id}> \`—É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è.\`**`);
            console.log(`${newMember.displayName || newMember.user.username} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –æ–±–∑–≤–æ–Ω—É.`);
        }
    }
    if (member_oldchannel){
        if (member_oldchannel.name == '‚Üí –û–±–∑–≤–æ–Ω ‚Üê'){
        let edit_channel = newMember.guild.channels.find(c => c.name == "closed-accept");
            if (!edit_channel) return console.log('[ERROR] –ù–µ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏.');
            edit_channel.permissionOverwrites.forEach(async (perm) => {
                if (perm.type != 'member') return
                if (perm.id != newMember.id) return
                await perm.delete('–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ (–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è)');
            });
            edit_channel.send(`**<@${newMember.id}> \`–æ—Ç–∫–ª—é—á–∏–ª—Å—è.\`**`);
            console.log(`${newMember.displayName || newMember.user.username} –≤—ã—à–µ–ª —Å –æ–±–∑–≤–æ–Ω–∞.`);
        }
    }
});

bot.on('message', async (message) => {
    if (message.channel.type == 'dm') return
    if (message.author.bot) return
    let moscow_date = new Date((new Date().valueOf()) + 10800000);
    const args = message.content.split(' ');
    if (args[0] == '/gov'){
        if (!message.member.roles.some(r => ['‚Üí Leader`s Team ‚Üê', '‚Üí Deputy Leader`s ‚Üê'].includes(r.name)) && !message.member.hasPermission("ADMINISTRATOR")){
            message.reply(`**\`–æ—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.\`**`).then(msg => msg.delete(12000));
            return message.delete();
        }
        if (!args[1] || !args[2] || !args[3]){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /gov [—á–∞—Å—ã] [–º–∏–Ω—É—Ç—ã] [—Ñ—Ä–∞–∫—Ü–∏—è]\`**`);
            return message.delete();
        }
        args[2] = `${args[1]}:${args[2]}:00`;
        args[1] = `${moscow_date.getFullYear()}-${(moscow_date.getMonth() + 1).toString().padStart(2, '0')}-${moscow_date.getDate().toString().padStart(2, '0')}`;
        let date_yymmdd = args[1].split('-');
        let date_hhmmss = args[2].split(':');
        if (date_yymmdd.length != 3 || date_hhmmss.length != 3){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /gov [—á–∞—Å—ã] [–º–∏–Ω—É—Ç—ã] [—Ñ—Ä–∞–∫—Ü–∏—è]\`**`);
            return message.delete();
        }
        let date = new Date(date_yymmdd[0], date_yymmdd[1] - 1, date_yymmdd[2], date_hhmmss[0], date_hhmmss[1], date_hhmmss[2]);
        if (date.toString() == 'Invalid Date' || date.valueOf() < new Date((moscow_date) + 10800000).valueOf()){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /gov [—á–∞—Å—ã] [–º–∏–Ω—É—Ç—ã] [—Ñ—Ä–∞–∫—Ü–∏—è]\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–∞—Ç–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ –≤–µ—Ä–Ω–æ. ('–ù–∞–ø–∏—Å–∞–Ω–æ –≤ –ø—Ä–æ—à–ª–æ–º –≤—Ä–µ–º–µ–Ω–∏')\`**`);
            return message.delete();
        }
        let formate_date = `${date.getFullYear()}-` + 
        `${(date.getMonth() + 1).toString().padStart(2, '0')}-` +
        `${date.getDate().toString().padStart(2, '0')} ` + 
        `${date.getHours().toString().padStart(2, '0')}:` + 
        `${date.getMinutes().toString().padStart(2, '0')}:` + 
        `${date.getSeconds().toString().padStart(2, '0')}`;
        let newDate = [formate_date.split(' ')[0].split('-')[0], formate_date.split(' ')[0].split('-')[1], formate_date.split(' ')[0].split('-')[2], formate_date.split(' ')[1].split(':')[0],formate_date.split(' ')[1].split(':')[1],formate_date.split(' ')[1].split(':')[2]];
        if (newDate[4] != 00 && newDate[4] != 30){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /gov [—á–∞—Å—ã] [–º–∏–Ω—É—Ç—ã] [—Ñ—Ä–∞–∫—Ü–∏—è]\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ó–∞–Ω–∏–º–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –º–æ–∂–Ω–æ –≤ '00', '30'.\`**`);
            return message.delete();
        }
        if (!manytags.some(tag => tag == args.slice(3).join(' ').toUpperCase())){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /gov [—á–∞—Å—ã] [–º–∏–Ω—É—Ç—ã] [—Ñ—Ä–∞–∫—Ü–∏—è]\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è '${args.slice(3).join(' ')}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\`**`);
            return message.delete();
        }
        if (!message.member.roles.some(r => r.name == tags[args.slice(3).join(' ').toUpperCase()]) && !message.member.hasPermission("ADMINISTRATOR")){
            message.reply(`**\`–æ—à–∏–±–∫–∞! –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è '${tags[args.slice(3).join(' ').toUpperCase()]}'\`**`);
            return message.delete();
        }
        let channel = message.guild.channels.find(c => c.name == 'gov-info');
        if (!channel) return message.reply(`**\`–ö–∞–Ω–∞–ª 'gov-info' –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª.\`**`);
        channel.fetchMessages({limit: 100}).then(async messages => {
            if (messages.size <= 0){
                let fractions = ['\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Goverment\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Central Bank\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Driving School\` ',
                '\`–ê–≥–µ–Ω—Ç FBI\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos PD\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas PD\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro PD\` ',
		'\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Red-County SD\` ',
                '\`–í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π Los-Santos Army\` ',
                '\`–í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π San-Fierro Army\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas Jail\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos CNN\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro CNN\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas CNN\` '];
                let date = ['\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`'];
                let modify = ['**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                `**\`–°–æ–∑–¥–∞–Ω–∞ —Ñ—Ä–∞–∫—Ü–∏–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π. –ò—Å—Ç–æ—á–Ω–∏–∫: –°–∏—Å—Ç–µ–º–∞\`**`];
                await fractions.forEach(async (string, i) => {
                    if (string.includes(tags[args.slice(3).join(' ').toUpperCase()])){
                        if (!date.some(v => v.includes(formate_date))){
                            let date_modify = new Date((moscow_date) + 10800000);
                            date[i] = '\` ¬ª ' + formate_date + '\`';
                            modify[0] = modify[1];
                            modify[1] = modify[2];
                            modify[2] = modify[3];
                            modify[3] = modify[4];
                            modify[4] = modify[5];
                            modify[5] = modify[6];
                            modify[6] = modify[7];
                            modify[7] = modify[8];
                            modify[8] = modify[9];
                            modify[9] = `**\`[${date_modify.getHours().toString().padStart(2, '0')}:${date_modify.getMinutes().toString().padStart(2, '0')}:${date_modify.getSeconds().toString().padStart(2, '0')}]\` ${message.member} \`–Ω–∞–∑–Ω–∞—á–∏–ª —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ ${args.slice(3).join(' ').toUpperCase()} –Ω–∞ ${newDate[3]}:${newDate[4]}\`**`;
                            message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é '${tags[args.slice(3).join(' ').toUpperCase()]}' –Ω–∞ ${formate_date}. –ù–∞–∂–º–∏—Ç–µ –Ω–∞\` <#${channel.id}> \`–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\`**`);
                            message.delete();
                        }else{
                            message.reply(`**\`—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–∞ –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ! –ù–∞–∂–º–∏—Ç–µ –Ω–∞\` <#${channel.id}> \`–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\`**`);
                            message.delete();
                        }
                    }
                });
                const embed = new Discord.RichEmbed();
                embed.setTitle('**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**');
                embed.setColor('#FF0000');
                embed.setTimestamp(new Date());
                embed.setFooter('Support Team ¬ª Central DataBase', message.guild.iconURL);
                embed.addField('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è', fractions.join('\n'), true);
                embed.addField('–î–∞—Ç–∞', date.join('\n'), true);
                embed.addField('–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è', modify.join('\n'), false);
                channel.send(embed);
                return message.delete();
            }else if (messages.size == 1){
                messages.forEach(async msg => {
                    if (!msg.embeds) return
                    if (!msg.embeds[0].title) return
                    if (msg.embeds[0].title != '**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**') return
                    let fractions = msg.embeds[0].fields[0].value.split('\n');
                    let date = msg.embeds[0].fields[1].value.split('\n');
                    let modify = msg.embeds[0].fields[2].value.split('\n');
                    await fractions.forEach(async (string, i) => {
                        if (string.includes(tags[args.slice(3).join(' ').toUpperCase()])){
                            if (!date.some(v => v.includes(formate_date))){
                                let date_modify = new Date((moscow_date) + 10800000);
                                date[i] = '\` ¬ª ' + formate_date + '\`';
                                modify[0] = modify[1];
                                modify[1] = modify[2];
                                modify[2] = modify[3];
                                modify[3] = modify[4];
                                modify[4] = modify[5];
                                modify[5] = modify[6];
                                modify[6] = modify[7];
                                modify[7] = modify[8];
                                modify[8] = modify[9];
                                modify[9] = `**\`[${date_modify.getHours().toString().padStart(2, '0')}:${date_modify.getMinutes().toString().padStart(2, '0')}:${date_modify.getSeconds().toString().padStart(2, '0')}]\` ${message.member} \`–Ω–∞–∑–Ω–∞—á–∏–ª —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ ${args.slice(3).join(' ').toUpperCase()} –Ω–∞ ${newDate[3]}:${newDate[4]}\`**`;
                                message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é '${tags[args.slice(3).join(' ').toUpperCase()]}' –Ω–∞ ${formate_date}. –ù–∞–∂–º–∏—Ç–µ –Ω–∞\` <#${channel.id}> \`–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\`**`);
                                message.delete();
                            }else{
                                message.reply(`**\`—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–∞ –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ! –ù–∞–∂–º–∏—Ç–µ –Ω–∞\` <#${channel.id}> \`–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\`**`);
                                message.delete();
                            }
                        }
                    });
                    const embed = new Discord.RichEmbed();
                    embed.setTitle('**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**');
                    embed.setColor('#FF0000');
                    embed.setTimestamp(new Date());
                    embed.setFooter('Support Team ¬ª Central DataBase', message.guild.iconURL);
                    embed.addField(msg.embeds[0].fields[0].name, fractions.join('\n'), msg.embeds[0].fields[0].inline);
                    embed.addField(msg.embeds[0].fields[1].name, date.join('\n'), msg.embeds[0].fields[1].inline);
                    embed.addField(msg.embeds[0].fields[2].name, modify.join('\n'), msg.embeds[0].fields[2].inline);
                    msg.edit(embed);
                });
            }else{
                message.reply(`**\`–æ—à–∏–±–∫–∞! –í –∫–∞–Ω–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ–ª—å—à–µ —á–µ–º –æ–¥–Ω–æ.\`**`);
                return message.delete();
            }
        });
    }
    if (args[0] == '/cancelgov'){
        if (!message.member.roles.some(r => ['‚Üí Leader`s Team ‚Üê', '‚Üí Deputy Leader`s ‚Üê'].includes(r.name)) && !message.member.hasPermission("ADMINISTRATOR")){
            message.reply(`**\`–æ—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.\`**`).then(msg => msg.delete(12000));
            return message.delete();
        }
        if (!args[1]){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /cancelgov [—Ñ—Ä–∞–∫—Ü–∏—è]\`**`);
            return message.delete();
        }
        if (!manytags.some(tag => tag == args.slice(1).join(' ').toUpperCase())){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /cancelgov [—Ñ—Ä–∞–∫—Ü–∏—è]\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è '${args.slice(3).join(' ')}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\`**`);
            return message.delete();
        }
        if (!message.member.roles.some(r => r.name == tags[args.slice(1).join(' ').toUpperCase()]) && !message.member.hasPermission("ADMINISTRATOR")){
            message.reply(`**\`–æ—à–∏–±–∫–∞! –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è '${tags[args.slice(1).join(' ').toUpperCase()]}'\`**`);
            return message.delete();
        }
        let channel = message.guild.channels.find(c => c.name == 'gov-info');
        if (!channel) return message.reply(`**\`–ö–∞–Ω–∞–ª 'gov-info' –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª.\`**`);
        channel.fetchMessages({limit: 100}).then(async messages => {
            if (messages.size <= 0){
                let fractions = ['\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Goverment\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Central Bank\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Driving School\` ',
                '\`–ê–≥–µ–Ω—Ç FBI\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos PD\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas PD\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro PD\` ',
		'\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Red-County SD\` ',
                '\`–í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π Los-Santos Army\` ',
                '\`–í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π San-Fierro Army\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas Jail\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos CNN\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro CNN\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas CNN\` '];
                let date = ['\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`'];
                let modify = ['**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                `**\`–°–æ–∑–¥–∞–Ω–∞ —Ñ—Ä–∞–∫—Ü–∏–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π. –ò—Å—Ç–æ—á–Ω–∏–∫: –°–∏—Å—Ç–µ–º–∞\`**`];
                const embed = new Discord.RichEmbed();
                embed.setTitle('**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**');
                embed.setColor('#FF0000');
                embed.setTimestamp(new Date());
                embed.setFooter('Support Team ¬ª Central DataBase', message.guild.iconURL);
                embed.addField('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è', fractions.join('\n'), true);
                embed.addField('–î–∞—Ç–∞', date.join('\n'), true);
                embed.addField('–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è', modify.join('\n'), false);
                channel.send(embed);
                message.reply(`**\`—Å–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –ø–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞\` <#${channel.id}>**`);
                return message.delete();
            }else if (messages.size == 1){
                messages.forEach(async msg => {
                    if (!msg.embeds) return
                    if (!msg.embeds[0].title) return
                    if (msg.embeds[0].title != '**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**') return
                    let fractions = msg.embeds[0].fields[0].value.split('\n');
                    let date = msg.embeds[0].fields[1].value.split('\n');
                    let modify = msg.embeds[0].fields[2].value.split('\n');
                    await fractions.forEach(async (string, i) => {
                        if (string.includes(tags[args.slice(1).join(' ').toUpperCase()])){
                            if (!date[i].includes('–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')){
                                let date_modify = new Date((moscow_date) + 10800000);
                                date[i] = '\` ¬ª ' + '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ' + '\`';
                                modify[0] = modify[1];
                                modify[1] = modify[2];
                                modify[2] = modify[3];
                                modify[3] = modify[4];
                                modify[4] = modify[5];
                                modify[5] = modify[6];
                                modify[6] = modify[7];
                                modify[7] = modify[8];
                                modify[8] = modify[9];
                                modify[9] = `**\`[${date_modify.getHours().toString().padStart(2, '0')}:${date_modify.getMinutes().toString().padStart(2, '0')}:${date_modify.getSeconds().toString().padStart(2, '0')}]\` ${message.member} \`–æ—Ç–º–µ–Ω–∏–ª —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ ${args.slice(1).join(' ').toUpperCase()}\`**`;
                                message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é '${tags[args.slice(1).join(' ').toUpperCase()]}'. –ù–∞–∂–º–∏—Ç–µ –Ω–∞\` <#${channel.id}> \`–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\`**`);
                                message.delete();
                            }else{
                                message.reply(`**\`—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –¥–∞–Ω–Ω—É—é —Ñ—Ä–∞–∫—Ü–∏—é –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ, –∑–∞—á–µ–º –µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å?! –ù–∞–∂–º–∏—Ç–µ –Ω–∞\` <#${channel.id}> \`–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\`**`);
                                message.delete();
                            }
                        }
                    });
                    const embed = new Discord.RichEmbed();
                    embed.setTitle('**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**');
                    embed.setColor('#FF0000');
                    embed.setTimestamp(new Date());
                    embed.setFooter('Support Team ¬ª Central DataBase', message.guild.iconURL);
                    embed.addField(msg.embeds[0].fields[0].name, fractions.join('\n'), msg.embeds[0].fields[0].inline);
                    embed.addField(msg.embeds[0].fields[1].name, date.join('\n'), msg.embeds[0].fields[1].inline);
                    embed.addField(msg.embeds[0].fields[2].name, modify.join('\n'), msg.embeds[0].fields[2].inline);
                    msg.edit(embed);
                });
            }else{
                message.reply(`**\`–æ—à–∏–±–∫–∞! –í –∫–∞–Ω–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ–ª—å—à–µ —á–µ–º –æ–¥–Ω–æ.\`**`);
                return message.delete();
            }
        });
    }
});

async function tabl_edit_update(){
    setInterval(async () => {
        let moscow_date = new Date((new Date().valueOf()) + 10800000);
        let serverid_get = '618449202141331460';
        let channel = bot.guilds.get(serverid_get).channels.find(c => c.name == 'gov-info');
        if (!channel) return console.error('–∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω...');
        channel.fetchMessages({limit: 100}).then(async messages => {
            if (messages.size <= 0){
                let fractions = ['\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Goverment\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Central Bank\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Driving School\` ',
                '\`–ê–≥–µ–Ω—Ç FBI\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos PD\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas PD\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro PD\` ',
		'\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Red-County SD\` ',
                '\`–í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π Los-Santos Army\` ',
                '\`–í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π San-Fierro Army\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas Jail\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas MC\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Los-Santos CNN\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ San-Fierro CNN\` ',
                '\`–°–æ—Ç—Ä—É–¥–Ω–∏–∫ Las-Venturas CNN\` '];
                let date = ['\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`',
                '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`'];
                let modify = ['**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                '**–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –∏—Ö –µ—â–µ –Ω–µ –±—ã–ª–æ!**',
                `**\`–°–æ–∑–¥–∞–Ω–∞ —Ñ—Ä–∞–∫—Ü–∏–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π. –ò—Å—Ç–æ—á–Ω–∏–∫: –°–∏—Å—Ç–µ–º–∞\`**`];
                const embed = new Discord.RichEmbed();
                embed.setTitle('**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**');
                embed.setColor('#FF0000');
                embed.setTimestamp(new Date());
                embed.setFooter('Support Team ¬ª Central DataBase', bot.guilds.get(serverid_get).iconURL);
                embed.addField('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è', fractions.join('\n'), true);
                embed.addField('–î–∞—Ç–∞', date.join('\n'), true);
                embed.addField('–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è', modify.join('\n'), false);
                channel.send(embed);
            }else if (messages.size == 1){
                messages.forEach(async msg => {
                    if (!msg.embeds) return
                    if (!msg.embeds[0].title) return
                    if (msg.embeds[0].title != '**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**') return
                    let modify_func_get = false;
                    let fractions = msg.embeds[0].fields[0].value.split('\n');
                    let date = msg.embeds[0].fields[1].value.split('\n');
                    let modify = msg.embeds[0].fields[2].value.split('\n');
                    await date.forEach(async (string, i) => {
                        string = string.replace(' ¬ª ', '');
                        string = string.replace('\`', '');
                        string = string.replace('\`', '');
                        if (string != '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'){
                            let date_yymmdd = string.split(' ')[0].split('-');
                            let date_hhmmss = string.split(' ')[1].split(':');
                            let newdate = await new Date(date_yymmdd[0], date_yymmdd[1] - 1, date_yymmdd[2], date_hhmmss[0], date_hhmmss[1], date_hhmmss[2]);
                            if (newdate.toString() == 'Invalid Date' || newdate.valueOf() < new Date((moscow_date) + 10800000).valueOf()){
                                let date_modify = new Date((moscow_date) + 10800000);
                                date[i] = '\` ¬ª –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ\`';      
                                modify[0] = modify[1];
                                modify[1] = modify[2];
                                modify[2] = modify[3];
                                modify[3] = modify[4];
                                modify[4] = modify[5];
                                modify[5] = modify[6];
                                modify[6] = modify[7];
                                modify[7] = modify[8];
                                modify[8] = modify[9];
                                modify[9] = `**\`[${date_modify.getHours().toString().padStart(2, '0')}:${date_modify.getMinutes().toString().padStart(2, '0')}:${date_modify.getSeconds().toString().padStart(2, '0')}]\` <@${bot.user.id}> \`–æ—Ç–º–µ–Ω–∏–ª —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ\` ${fractions[i]} \`(–ø—Ä–æ—à–ª–æ)\`**`;
                                modify_func_get = true;
                            }
                        }
                    });
                    const embed = new Discord.RichEmbed();
                    embed.setTitle('**Arizona Role Play ¬ª –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è**');
                    embed.setColor('#FF0000');
                    embed.setTimestamp(new Date());
                    embed.setFooter('Support Team ¬ª Central DataBase', bot.guilds.get(serverid_get).iconURL);
                    embed.addField(msg.embeds[0].fields[0].name, fractions.join('\n'), msg.embeds[0].fields[0].inline);
                    embed.addField(msg.embeds[0].fields[1].name, date.join('\n'), msg.embeds[0].fields[1].inline);
                    embed.addField(msg.embeds[0].fields[2].name, modify.join('\n'), msg.embeds[0].fields[2].inline);
                    if (modify_func_get) msg.edit(embed);
                });
            }else{
                return console.error('–∫–∞–Ω–∞–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª–µ–µ 1 —Å–æ–æ–±—â–µ–Ω–∏—è.');
            }
        });
    }, 60000);
}

bot.on('raw', async event => {
    if (!events.hasOwnProperty(event.t)) return; // –ï—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–º–∞–π–ª–∏–∫–∞, —Ç–æ –≤—ã—Ö–æ–¥
    if (event.t == "MESSAGE_REACTION_ADD"){
        let event_guildid = event.d.guild_id // ID discord —Å–µ—Ä–≤–µ—Ä–∞
        let event_channelid = event.d.channel_id // ID –∫–∞–Ω–∞–ª–∞
        let event_userid = event.d.user_id // ID —Ç–æ–≥–æ –∫—Ç–æ –ø–æ—Å—Ç–∞–≤–∏–ª —Å–º–∞–π–ª–∏–∫
        let event_messageid = event.d.message_id // ID —Å–æ–æ–±—â–µ–Ω–∏–µ –∫—É–¥–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω —Å–º–∞–π–ª–∏–∫
        let event_emoji_name = event.d.emoji.name // –ù–∞–∑–≤–∞–Ω–∏–µ —Å–º–∞–π–ª–∏–∫–∞

        if (event_userid == bot.user.id) return // –ï—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏–ª —Å–º–∞–π–ª–∏–∫ –±–æ—Ç —Ç–æ –≤—ã—Ö–æ–¥
        if (event_guildid != '618449202141331460') return // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥—Ä—É–≥–æ–π —Ç–æ –≤—ã—Ö–æ–¥

        let server = bot.guilds.find(g => g.id == event_guildid); // –ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–∑ –µ–≥–æ ID
        let channel = server.channels.find(c => c.id == event_channelid); // –ü–æ–ª—É—á–∏—Ç—å –∫–∞–Ω–∞–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ —Å–ø–∏—Å–∫—É –∫–∞–Ω–∞–ª–æ–≤
        let message = await channel.fetchMessage(event_messageid); // –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞
        let member = server.members.find(m => m.id == event_userid); // –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞
        
        if (channel.name != `requests-for-roles`) return // –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –Ω–µ –±—É–¥–µ—Ç 'requests-for-roles', —Ç–æ –≤—ã–π—Ç–∏

        if (event_emoji_name == "üá©"){
            if (!message.embeds[0]){
                channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –±–∞–≥–Ω—É—Ç—ã–π –∑–∞–ø—Ä–æ—Å.\``);
                return message.delete();
            }else if (message.embeds[0].title == "`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`"){
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_nickname = message.embeds[0].fields[1].value.split(`\`–ù–∏–∫:\` `)[1];
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (!field_user || !field_nickname || !field_role || !field_channel){
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –±–∞–≥–Ω—É—Ç—ã–π –∑–∞–ø—Ä–æ—Å.\``);
                }else{
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –∑–∞–ø—Ä–æ—Å –æ—Ç ${field_nickname}, —Å ID:\` ||**\` [${field_user.id}] \`**||`);
                }
                if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                return message.delete();
            }else if (message.embeds[0].title == '`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`'){
                let field_author = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[1].value.split(/ +/)[1]);
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (!field_author || !field_user || !field_role || !field_channel){
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –±–∞–≥–Ω—É—Ç—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏.\``);
                }else{
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –æ—Ç ${field_author.displayName}, —Å ID:\` ||**\` [${field_author.id}] \`**||`);
                }
                if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                return message.delete();
            }
        }else if(event_emoji_name == "‚ùå"){
            if (message.embeds[0].title == '`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let date_debug = new Date().valueOf() - message.createdTimestamp;
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_nickname = message.embeds[0].fields[1].value.split(`\`–ù–∏–∫:\` `)[1];
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                channel.send(`\`[DENY]\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –æ—Ç ${field_nickname}, —Å ID:\` ||**\` [${field_user.id}] \`**||\n\`[DEBUG]\` \`–ó–∞–ø—Ä–æ—Å –±—ã–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∏ –æ—Ç–∫–∞–∑–∞–Ω –∑–∞ ${time(date_debug)}\``);
                field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\n–í–∞—à –Ω–∏–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${field_nickname}\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∏–∫ –Ω–∞: [–§—Ä–∞–∫—Ü–∏—è] –ò–º—è_–§–∞–º–∏–ª–∏—è [–†–∞–Ω–≥]\``)
                let date = require('./objects/functions').getDateMySQL();
                connection.query(`SELECT * FROM \`blacklist_names\` WHERE \`name\` = '${field_nickname.toLowerCase()}' AND \`server\` = '${server.id}'`, async (err, names) => {
                    if (names.length == 0) await connection.query(`INSERT INTO \`blacklist_names\` (\`server\`, \`name\`, \`blacklisted\`, \`moderator\`, \`time_add\`, \`user\`) VALUES ('${server.id}', '${field_nickname.toLowerCase()}', '1', '${member.id}', '${date}', '${field_user.id}')`);
                    if (names.length == 1){
                        connection.query(`UPDATE \`blacklist_names\` SET \`blacklisted\` = '1', \`moderator\` = '${member.id}', \`time_add\` = '${date}' WHERE \`server\` = '${server.id}' AND \`name\` = '${field_nickname.toLowerCase()}'`);
                    }
                });
                connection.query(`SELECT * FROM \`requests-for-roles\` WHERE \`server\` = '${server.id}' AND \`user\` = '${field_user.id}'`, async (err, users) => {
                    if (users.length == 0) await connection.query(`INSERT INTO \`requests-for-roles\` (\`server\`, \`user\`, \`blacklisted\`) VALUES ('${server.id}', '${field_user.id}', '${date}')`);
                    if (users.length == 1){
                        connection.query(`UPDATE \`requests-for-roles\` SET \`blacklisted\` = '${date}' WHERE \`server\` = '${server.id}' AND \`user\` = '${field_user.id}'`);
                    }
                });
                if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                return message.delete();
            }else if (message.embeds[0].title == '`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let date_debug = new Date().valueOf() - message.createdTimestamp;
                let field_author = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[1].value.split(/ +/)[1]);
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (member.id == field_author.id) return channel.send(`\`[ERROR]\` \`${member.displayName} —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–∫–ª–æ–Ω—è—Ç—å –Ω–µ–ª—å–∑—è!\``).then(msg => msg.delete(5000))
                if (!field_user.roles.some(r => r.id == field_role.id)){
                    if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                    return message.delete();
                }
                channel.send(`\`[DENY]\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –æ—Ç\` <@${field_author.id}>\`, —Å ID:\` ||**\` [${field_author.id}] \`**||\n\`[DEBUG]\` \`–ó–∞–ø—Ä–æ—Å –±—ã–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∏ –æ—Ç–∫–∞–∑–∞–Ω –∑–∞ ${time(date_debug)}\``);
                field_channel.send(`<@${field_author.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:\` <@${field_user.id}>`)
                if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                return message.delete();
            }
        }else if (event_emoji_name == "‚úî"){
            if (message.embeds[0].title == '`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let date_debug = new Date().valueOf() - message.createdTimestamp;
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_nickname = message.embeds[0].fields[1].value.split(`\`–ù–∏–∫:\` `)[1];
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (field_user.roles.some(r => field_role.id == r.id)){
                    if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                    return message.delete(); // –ï—Å–ª–∏ —Ä–æ–ª—å –µ—Å—Ç—å, —Ç–æ –≤—ã—Ö–æ–¥
                }
                let rolesremoved = false;
                let rolesremovedcount = 0;
                if (field_user.roles.some(r=>rolesgg.includes(r.name))) {
                    for (var i in rolesgg){
                        let rolerem = server.roles.find(r => r.name == rolesgg[i]);
                        if (field_user.roles.some(role=>[rolesgg[i]].includes(role.name))){
                            rolesremoved = true;
                            rolesremovedcount = rolesremovedcount+1;
                            await field_user.removeRole(rolerem); // –ó–∞–±—Ä–∞—Ç—å —Ñ—Ä–∞–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ä–æ–ª–∏
                        }
                    }
                }
                await field_user.addRole(field_role); // –í—ã–¥–∞—Ç—å —Ä–æ–ª—å –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å —Ç—ç–≥–æ–º
                let effects = [];
                if (field_user.roles.some(r => r.name == 'üèÜ Legendary üèÜ')) effects.push('Legendary');
                connection.query(`SELECT * FROM \`requests-for-roles\` WHERE \`server\` = '${server.id}' AND \`user\` = '${field_user.id}'`, async (err, users) => {
                    if (users.length == 1){
                        if (new Date(`${users[0].blacklisted}`).valueOf() != '-30610224000000') effects.push('BlackListed');
                        if (new Date(`${users[0].remove_role}`).valueOf() != '-30610224000000') effects.push('Lifting the Role');
                    }
                    channel.send(`\`[ACCEPT]\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –∑–∞–ø—Ä–æ—Å –æ—Ç ${field_nickname}, —Å ID:\` ||**\` [${field_user.id}] \`**||\n\`[DEBUG]\` \`–ó–∞–ø—Ä–æ—Å –±—ã–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∏ –æ–¥–æ–±—Ä–µ–Ω –∑–∞ ${time(date_debug)}. [${effects.join(', ') || 'None'}]\``);
                });
                if (rolesremoved){
                    if (rolesremovedcount == 1){
                        field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞! ${rolesremovedcount} —Ä–æ–ª—å –¥—Ä—É–≥–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏ –±—ã–ª–∞ —É–±—Ä–∞–Ω–∞.\``)
                    }else if (rolesremovedcount < 5){
                        field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞! –û—Å—Ç–∞–ª—å–Ω—ã–µ ${rolesremovedcount} —Ä–æ–ª–∏ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∫—Ü–∏–π –±—ã–ª–∏ —É–±—Ä–∞–Ω—ã.\``)
                    }else{
                        field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞! –û—Å—Ç–∞–ª—å–Ω—ã–µ ${rolesremovedcount} —Ä–æ–ª–µ–π –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∫—Ü–∏–π –±—ã–ª–∏ —É–±—Ä–∞–Ω—ã.\``)
                    }
                }else{
                    field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞!\``)
                }
                if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                return message.delete();
            }else if (message.embeds[0].title == '`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let date_debug = new Date().valueOf() - message.createdTimestamp;
                let field_author = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[1].value.split(/ +/)[1]);
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (member.id == field_author.id) return channel.send(`\`[ERROR]\` \`${member.displayName} —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–µ–ª—å–∑—è!\``).then(msg => msg.delete(5000))
                if (!field_user.roles.some(r => r.id == field_role.id)){
                    if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                    return message.delete();
                }
                field_user.removeRole(field_role);
                channel.send(`\`[ACCEPT]\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ (${field_role.name}) –æ—Ç\` <@${field_author.id}>, \`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` <@${field_user.id}>, \`—Å ID:\` ||**\` [${field_user.id}] \`**||\n\`[DEBUG]\` \`–ó–∞–ø—Ä–æ—Å –±—ã–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∏ –æ–¥–æ–±—Ä–µ–Ω –∑–∞ ${time(date_debug)}\``);
                field_channel.send(`**<@${field_user.id}>, —Å –≤–∞—Å —Å–Ω—è–ª–∏ —Ä–æ–ª—å**  <@&${field_role.id}>  **–ø–æ –∑–∞–ø—Ä–æ—Å—É –æ—Ç <@${field_author.id}>.**`)
                if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                let date = require('./objects/functions').getDateMySQL();
                connection.query(`SELECT * FROM \`requests-for-roles\` WHERE \`server\` = '${server.id}' AND \`user\` = '${field_user.id}'`, async (err, users) => {
                    if (users.length == 0) await connection.query(`INSERT INTO \`requests-for-roles\` (\`server\`, \`user\`, \`remove_role\`, \`staff\`) VALUES ('${server.id}', '${field_user.id}', '${date}', '${field_author.id}')`);
                    if (users.length == 1){
                        connection.query(`UPDATE \`requests-for-roles\` SET \`remove_role\` = '${date}', \`staff\` = '${field_author.id}' WHERE \`server\` = '${server.id}' AND \`user\` = '${field_user.id}'`);
                    }
                });
                return message.delete()
            }
        }
    }
});

function time(s) {
    let ms = s % 1000;
    s = (s - ms) / 1000;
    let secs = s % 60;
    s = (s - secs) / 60;
    let mins = s % 60;
    s = (s - mins) / 60;
    let hrs = s % 24;
    s = (s - hrs) / 24;
    let days = s;
    let status = true;
    let output = '';

    if (days != 0){
        if (days.toString().endsWith('1') && !days.toString().endsWith('11')){
            output += days + ' –¥–µ–Ω—å';
        }else if (endsWithAny(['2', '3', '4'], days.toString()) && !endsWithAny(['12', '13', '14'], days.toString())){
            output += days + ' –¥–Ω—è';
        }else{
            output += days + ' –¥–Ω–µ–π';
        }
        status = false;
    }
    if (hrs != 0){
        if (status){
            if (hrs.toString().endsWith('1') && !hrs.toString().endsWith('11')){
                output += hrs + ' —á–∞—Å';
            }else if (endsWithAny(['2', '3', '4'], hrs.toString()) && !endsWithAny(['12', '13', '14'], hrs.toString())){
                output += hrs + ' —á–∞—Å–∞';
            }else{
                output += hrs + ' —á–∞—Å–æ–≤';
            }
            status = false;
        }
    }
    if (mins != 0){
        if (status){
            if (mins.toString().endsWith('1') && !mins.toString().endsWith('11')){
                output += mins + ' –º–∏–Ω—É—Ç—É';
            }else if (endsWithAny(['2', '3', '4'], mins.toString()) && !endsWithAny(['12', '13', '14'], mins.toString())){
                output += mins + ' –º–∏–Ω—É—Ç—ã';
            }else{
                output += mins + ' –º–∏–Ω—É—Ç';
            }
            status = false;
        }
    }
    if (secs != 0){
        if (status){
            if (secs.toString().endsWith('1') && !secs.toString().endsWith('11')){
                output += secs + ' —Å–µ–∫—É–Ω–¥—É';
            }else if (endsWithAny(['2', '3', '4'], secs.toString()) && !endsWithAny(['12', '13', '14'], secs.toString())){
                output += secs + ' —Å–µ–∫—É–Ω–¥—ã';
            }else{
                output += secs + ' —Å–µ–∫—É–Ω–¥';
            }
            status = false;
        }
    }
    if (ms != 0){
        if (status){
            output += ms + ' ms';
        }
    }
    return output;
}

bot.on('guildMemberAdd', async member => {
    if (member.guild.id != serverid) return
    levelhigh++;
    if (levelhigh >= 5){
        if (!member.hasPermission("MANAGE_ROLES")){
            member.ban(`SYSTEM: DDOS ATTACK`);
            console.log(`${member.id} - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –î–î–û–°.`)
        }
        setTimeout(() => {
            if (levelhigh > 0){
                levelhigh--;
            }
        }, 60000*levelhigh);
    }else{
        setTimeout(() => {
            if (levelhigh > 0){
                levelhigh--;
            }
        }, 60000*levelhigh);
    }
})